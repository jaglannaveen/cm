{"version":3,"sources":["components1/layout1/Header1.js","context1.js","components1/Contacts1/Contact1.js","components1/Contacts1/Contacts1.js","components1/layout1/TextInputGroup.js","components1/Contacts1/Addcontact1.js","components1/Pages/About.js","components1/Pages/NotFound.js","components1/tests/test.js","components1/Contacts1/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","prototypes","PropTypes","string","isRequired","reducer","state","action","type","contacts","filter","contact","id","payload","map","Context","React","createContext","Provider","dispatch","setState","a","axios","get","res","this","data","value","children","Component","Consumer","Contact","showcontactInfo","onDeleteClick","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","Addcontact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","exact","path","component","About","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa5665d.chunk.js","sourcesContent":["/*import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n const Header=(props)=> {\r\n     const{branding}=props;\r\n    return (\r\n        <div>\r\n            <h1>{branding}</h1>\r\n        </div>\r\n    );\r\n};\r\nHeader.defaultProps={\r\n    branding: 'My App'\r\n};\r\nHeader.prototypes={\r\n    branding:PropTypes.string.isRequired\r\n};  \r\nexport default Header;*/\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n const Header=(props)=> {\r\n     const{branding}=props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\r\n            <div className=\"container\">\r\n                <a href=\"\\\"className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n            </div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n\r\n            <li className=\"nav-item\">\r\n             <Link to=\"/\" className='nav-link'>\r\n                <i className='fas fa-home'/>\r\n                Home\r\n            </Link>\r\n            <Link to=\"/Contact/Add\" className='nav-link'>\r\n                <i className='fas fa-plus'/>\r\n                ADD CONTACT\r\n            </Link>\r\n            <Link to=\"/about\" className='nav-link'>\r\n                <i className='fas fa-question'/>\r\n                About Page\r\n            </Link>\r\n            </li>\r\n            </ul>\r\n        </nav>  \r\n    );\r\n};\r\nHeader.defaultProps={\r\n    branding: 'My App'\r\n};\r\nHeader.prototypes={\r\n    branding:PropTypes.string.isRequired\r\n}; \r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Contact from './components1/Contacts1/Contact1';\r\nconst reducer =(state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.filter(contact=>contact.id !=action.payload)\r\n                \r\n            };\r\n            case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                       contacts:[action.payload, ...state.contacts]\r\n                \r\n            };\r\n           case 'UPDATE_CONTACT':\r\n                return{\r\n                    ...state,\r\n                    contacts:state.contacts.map(\r\n                        contact=>contact.id===action.payload.id?(contact=action.payload):contact\r\n                       \r\n                    )\r\n                };\r\n            default:\r\n                return state;\r\n    }\r\n};\r\nconst Context =React.createContext();\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[ ],\r\n        dispatch:action=>{\r\n            this.setState(state=>reducer(state,action))\r\n        }\r\n    }\r\n  async componentDidMount(){\r\n       const res=await\r\n      axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n      this.setState({contacts:res.data});\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer=Context.Consumer; \r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context1\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Contact extends Component {\r\n  state = { showcontactInfo: false };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n\r\n    const { showcontactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name} {\"\"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showcontactInfo: !this.state.showcontactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                \r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                \r\n                <Link to ={`contact/edit/${id}`}>\r\n                <i\r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"black\",\r\n                    marginRight: \"1rem\",\r\n                  }}\r\n                />\r\n                </Link>\r\n              </h4>\r\n              {showcontactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  Contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact1\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context1\";\r\n\r\nclass Contacts extends Component {\r\nrender() {\r\n    return (\r\n      <Consumer>\r\n        {\r\n        value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <div>\r\n                {contacts.map((contact)=>(\r\n                  <Contact\r\n                    key={contact.id}\r\n                    contact={contact}/>\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n  }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\n import PropTypes from 'prop-types';\r\n import classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\" form-control form-control-lg\",{'is-invalid':error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context1';\r\nimport TextInputGroup from '../layout1/TextInputGroup';\r\n//import {v4 as uuid} from 'uuid'\r\nimport axios from 'axios';\r\n//const id = uuid()\r\n\r\nclass Addcontact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const{name ,email,phone}=this.state;\r\n        //check for errors\r\n        if(name===''){\r\n            this.setState({errors:{name:'name is required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:'email is required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'phone is required'}});\r\n            return;\r\n        }\r\n        const newContact={\r\n          // id:uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n      const res=await axios.post(`https://jsonplaceholder.typicode.com/users`,newContact);\r\n      dispatch({type: 'ADD_CONTACT', payload:res.data});\r\n       \r\n       // dispatch({ type: 'ADD_CONTACT', payload:newContact });\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n    onChange=e=>this.setState({[e.target.name]:e.target.value});\r\n    render() {\r\n        const { name, email, phone ,errors} = this.state;\r\n        return(\r\n            <Consumer>\r\n                {\r\n                    value=>{\r\n                        const{dispatch}=value;\r\n                        return (\r\n                            <div className=\"card mb-3\">\r\n                             <div className=\"card-header\">\r\n                              Addcontact  </div>\r\n                              <div className=\"card-body\">\r\n                              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                      <TextInputGroup\r\n                                      label=\"Name\"\r\n                                      name=\"name\"\r\n                                      placeholder=\"Entername\"\r\n                                      value={name}\r\n                                      onChange={this.onChange}\r\n                                      error={errors.name}\r\n                                       />\r\n                                      <TextInputGroup\r\n                                      label=\"Email\"\r\n                                      name=\"email\"\r\n                                      placeholder=\"Enter Email\"\r\n                                      value={email}\r\n                                      onChange={this.onChange} \r\n                                      error={errors.email}\r\n                                      />\r\n                                      <TextInputGroup\r\n                                      label=\"Phone\"\r\n                                      name=\"phone\"\r\n                                      placeholder=\"Enter Phone\"\r\n                                      value={phone}\r\n                                      onChange={this.onChange} \r\n                                      error={errors.phone}\r\n                                      />\r\n                                  <input type=\"submit\" value=\"Add contact\"\r\n                                  className=\"btn btn-block bt-light\"/>\r\n                                  </form>\r\n                                  </div>\r\n                                  </div>\r\n                        ); \r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n        /*return (\r\n            <div className=\"card mb-3\">\r\n             <div className=\"card-header\">\r\n              Addcontact  </div>\r\n              <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit}>\r\n                      <div className=\"form-group\">\r\n                      <label htmlFor=\"name\">name</label>\r\n                      <input type=\"text\" name=\"name\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter Name....\"\r\n                      value={name}\r\n                      onChange={this.onChange} /></div>\r\n                      <div className=\"form-group\">\r\n                      <label htmlFor=\"text\">email</label>\r\n                      <input type=\"email\" name=\"email\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter email....\"\r\n                      value={email}\r\n                      onChange={this.onChange} /></div>\r\n                      <div className=\"form-group\">\r\n                      <label htmlFor=\"phone\">phone</label>\r\n                      <input type=\"text\" name=\"phone\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter phone....\"\r\n                      value={phone}\r\n                      onChange={this.onChange} /></div>\r\n                  <input type=\"submit\" value=\"Add contact\"\r\n                  className=\"btn btn-block bt-light\"/>\r\n                  </form>\r\n                  </div>\r\n                  </div>\r\n        );*/\r\n    }\r\n}\r\nexport default  Addcontact","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n        <h1 className=\"display-4\">About Contact Maneger</h1>\r\n        <p className=\"lead\">Simple app to manage Contacts</p>    \r\n        <p className=\"text-Secondary\">version 1.0.0 </p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span>\r\n        page not found\r\n      </h1>\r\n      <p className=\"lead\">sorry ,that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass test extends Component {\r\n    state={\r\n        title:'',\r\n        body:''\r\n    };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n        title:data.title,\r\n        body:data.body\r\n    }))\r\n  }\r\n  /*componentWillMount() {\r\n    console.log(\"componentWillMount\");\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"componentDidUpdate\");\r\n  }*/\r\n  render() {\r\n      const{title,body}=this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default test;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context1';\r\nimport TextInputGroup from '../layout1/TextInputGroup';\r\n//import {v4 as uuid} from 'uuid'\r\nimport axios from 'axios';\r\n//const id = uuid()\r\n\r\nclass EditContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    async componentDidMount(){\r\n        const{id}=this.props.match.params;\r\n        const res=await axios.get\r\n        ( `https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact=res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        });\r\n       }\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const{name ,email,phone}=this.state;\r\n        //check for errors\r\n        if(name===''){\r\n            this.setState({errors:{name:'name is required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:'email is required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'phone is required'}});\r\n            return;\r\n        }\r\n\r\n       const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data }); \r\n     \r\n       \r\n      \r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n    onChange=e=>this.setState({[e.target.name]:e.target.value});\r\n    render() {\r\n        const { name, email, phone ,errors} = this.state;\r\n        return(\r\n            <Consumer>\r\n                {\r\n                    value=>{\r\n                        const{dispatch}=value;\r\n                        return (\r\n                            <div className=\"card mb-3\">\r\n                             <div className=\"card-header\">\r\n                              Edit Contact </div>\r\n                              <div className=\"card-body\">\r\n                              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                      <TextInputGroup\r\n                                      label=\"Name\"\r\n                                      name=\"name\"\r\n                                      placeholder=\"Entername\"\r\n                                      value={name}\r\n                                      onChange={this.onChange}\r\n                                      error={errors.name}\r\n                                       />\r\n                                      <TextInputGroup\r\n                                      label=\"Email\"\r\n                                      name=\"email\"\r\n                                      placeholder=\"Enter Email\"\r\n                                      value={email}\r\n                                      onChange={this.onChange} \r\n                                      error={errors.email}\r\n                                      />\r\n                                      <TextInputGroup\r\n                                      label=\"Phone\"\r\n                                      name=\"phone\"\r\n                                      placeholder=\"Enter Phone\"\r\n                                      value={phone}\r\n                                      onChange={this.onChange} \r\n                                      error={errors.phone}\r\n                                      />\r\n                                  <input type=\"submit\" value=\"Update Contact\"\r\n                                  className=\"btn btn-block bt-light\"/>\r\n                                  </form>\r\n                                  </div>\r\n                                  </div>\r\n                        ); \r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\nexport default  EditContact","import React from \"react\";\nimport Header from \"./components1/layout1/Header1\";\nimport Contacts from \"./components1/Contacts1/Contacts1\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context1\";\nimport Addcontact from \"./components1/Contacts1/Addcontact1\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components1/Pages/About\";\nimport NotFound from \"./components1/Pages/NotFound\";\nimport test from \"./components1/tests/test\";\nimport EditContact from \"./components1/Contacts1/EditContact\";\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"contactmanager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/contact/add\" component={Addcontact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/\" component={Contacts} />\n\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/tests\" component={test} />\n              <Route  exact component={NotFound} />\n              \n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}